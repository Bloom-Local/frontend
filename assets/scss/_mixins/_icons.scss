/*
 * Copyright Â© Bold Brand Commerce Sp. z o.o. All rights reserved.
 * See LICENSE for license details.
 */
@mixin backgroundImage($path, $name) {
    @if $path {
        background-image: url("~assets/images/icons/#{$path}/#{$name}");
    } @else {
        background-image: url("~assets/images/icons/#{$name}");
    }
}

@mixin generateIconBase($width, $height) {
    width: $width;
    height: $height;
    transition: transform 0.4s ease;
}

@mixin generateTransformIconClasses() {
    @each $transform in $iconTransforms {
        $transformIndex: index($iconTransforms, ($transform)) - 1;

        &.trans-#{$transform} {
            transform: rotate($transformIndex * 90deg);
        }
    }
}

@mixin generateSpriteSheetClass($sprite, $iconSize, $numberOfColumns) {
    &.sprite-#{$sprite} {
        $spriteBackgroundImage: "#{$sprite}.svg";
        @include backgroundImage(null, $spriteBackgroundImage);
        background-size: $numberOfColumns * 100%;
    }
}

@mixin fixedIconPosition($x, $y, $sizeIndex) {
    background-position-x: -($sizeIndex * $x);
    background-position-y: -($sizeIndex * $y);
}

@mixin generateIconTypeClasses($type, $subIcons, $iconSize, $numberOfColumns, $isMultiStateSprite, $isSingleColumnSprite, $isNotAnimatable) {
    @if $isNotAnimatable {
        @include generateSpriteSheetClass($type, $iconSize, $numberOfColumns);
    }

    @each $className in $subIcons {
        $subIconIndex: index($subIcons, ($className)) - 1;

        @if $isMultiStateSprite {
            @each $iconState in $iconStates {
                $iconStateIndex: index($iconStates, ($iconState)) - 1;

                &.#{$type}-#{$className}--#{$iconState} {
                    @include fixedIconPosition($iconStateIndex, $subIconIndex, $iconSize);
                }
            }
        } @else {
            &.#{$type}-#{$className} {
                @if $isSingleColumnSprite {
                    @include fixedIconPosition(0, $subIconIndex, $iconSize);
                } @else {
                    @include backgroundImage($type, "#{$className}.svg");
                    @include fixedIconPosition(4px, 4px, $iconSize);
                }
            }
        }
    }
}

@mixin generateIconClasses() {
    @each $size in $iconSizes {
        $sizeIndex: index($iconSizes, ($size)) - 1;
        $sizeValue: nth($iconValueSizes, $sizeIndex + 1);

        .icon--#{$size} {
            @include generateTransformIconClasses();

            @include generateIconBase($sizeValue, $sizeValue);

            @each $arrowIcon in $arrowIcons {
                @if $sizeIndex == 1 {
                    @include generateIconTypeClasses("arrow", $arrowIcon, 0, 1, null, null, null);
                } @else {
                    @include generateIconTypeClasses("arrow", $arrowIcon, 1, 1, null, null, null);
                }
            }

            @include generateIconTypeClasses("system", $systemSpriteIcons, $sizeValue, 3, 1, null, 1);

            @include generateIconTypeClasses("view", $viewSpriteIcons, $sizeValue, 2, 1, null, 1);

            @include generateIconTypeClasses("cell", $cellSpriteIcons, $sizeValue, 1, null, 1, 1);
            @include generateIconTypeClasses("checkbox", $checkboxSpriteIcons, $sizeValue, 1, null, 1, 1);
            @include generateIconTypeClasses("button", $additionSpriteIcons, $sizeValue, 1, null, 1, 1);
            @include generateIconTypeClasses("feedback", $alertSpriteIcons, $sizeValue, 1, null, 1, 1);

            @include generateIconTypeClasses("switch", $switchSpriteIcons, 1, 1, null, null, null);
            @include generateIconTypeClasses("editor", $editorSpriteIcons, 0, 1, null, null, null);
            @include generateIconTypeClasses("window", $windowActionsSpriteIcons, 0, 1, null, null, null);
            @include generateIconTypeClasses("attribute", $attributeIcons, 0, 1, null, null, null);

            @include generateIconTypeClasses("menu", $menuSpriteIcons, $sizeValue, 3, 1, null, 1);
            @include generateIconTypeClasses("sidebar", $sidebarSpriteIcons, $sizeValue, 2, 1, null, 1);

            @include generateIconTypeClasses("navbar", $navbarSpriteIcons, $sizeValue, 1, null, 1, 1);
        }
    }
}
